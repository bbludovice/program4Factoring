/* 
+-------------------------------------------------------------------+  
| = : = : = : = : = : = : = : = : = : = : = : = : = : = : = : = : = |
|{>/-------------------------------------------------------------\<}|
|: |                                                             | :| 
| :|                 C program by Breanne Ludovice               |: | 
|: |                                                             | :|
| :|                     CS1310 October 7, 2018                  |: |
|: |                                                             | :| 
| :|                Assignment: Program 4, Factoring             |: | 
|: |                                                             | :|
| :|                             _ _                             |: | 
|: |                           _{ ' }_                           | :| 
| :|                          { `.!.` }                          |: |
|: |                          ',_/Y\_,'                          | :| 
| :|                            {_,_}                            |: | 
|: |                              |                              | :|
| :|                            (\|  /)                          |: | 
|: |                             \| //                           | :|
| :|                              |//                            |: |
|: |                           \\ |/  //                         | :|
| :|                        ^^^^^^^^^^^^^^^                      |: |
|{>\-------------------------------------------------------------/<}|
| = : = : = : = : = : = : = : = : = : = : = : = : = : = : = : = : = |
+-------------------------------------------------------------------+
*/
#include <stdio.h>


int get_value (void) /* returns positive values the user inputs back to main */
{
 int value;  		 /* positive integer user inputs */
 
 do {
 	 printf ("Please type in a positive integer:  ");
 	 scanf ("%i", &value);
 	 printf ("You typed in %i.\n", value);
    } while (value < 0);
    
 printf ("%i is a good value.\n\n", value);
 return value;	
}



int print_factors (int first, int second)   /* prints the factors of the two integers */
{
 int value, i;	  /* value user inputs, increments i */
 
 value = first;   /* equating value to "first" sent from main */
 i = 1;			  /* initializing i to equal 1 to begin for loop */
 
 printf ("The factors of %i are: ", first);
 for (i == 1; i <= value; i++)
 	{
	 if (value % i == 0)
		{
	 	 printf (" %i ", i);	
		}
	}
	
 value = second;   /* equating value to "second" sent from main */
 i = 1;			   /* initializing i to equal 1 to begin for loop */
 
 printf ("\nThe factors of %i are: ", second);
 for (i == 1; i <= value; i++)
 	{
	 if (value % i == 0)
		{
	 	 printf (" %i ", i);	
		}
	}
 return value;
}



int print_primeFactorization (int first, int second) /* prints the prime factorization, from Dr. Redfield */
{
 int count, num;  		  /* incrementing count, value user input */
 
 count = 1; 	 		  /* initialize i to equal 1 to begin loop */
 num = first;			  /* equating num to "first" sent from main */
 
 printf ("\n\nThe prime factorization for %i is: ", first);
 while (count < num)	  /* check 2+; dividend left over */
 {
  count++;
  if (num % count == 0)   /* count divides into num */
  {
   printf (" %i ", count);
   num = num / count; 	 /* decrease num */
   count--;				 /* decrements count to try prime factor again */
  }
 }
 
 count = 1; 	 		  /* initialize i to equal 1 to begin loop */
 num = second;			  /* equating num to "second" sent from main */
 
 printf ("\nThe prime factorization for %i is: ", second);
 while (count < num)	  /* check 2+; dividend left over */
 {
  count++;
  if (num % count == 0)   /* count divides into num */
  {
   printf (" %i ", count);
   num = num / count; 	 /* decrease num */
   count--;				 /* decrements count to try prime factor again */
  }
 }
}



int print_LCM (int first, int second)
{
 int multiple;
 
 if (first > second)
 {
  multiple = first;
 }
  else
  {
   multiple = second;	
  }
  
  while (multiple % first != 0 || multiple % second != 0)
  {
   multiple++;	
  }
  
  printf ("\n\nThe LCM of %i and %i is: %i\n", first, second, multiple);
}



int print_GCF (int first, int second)
{
 int num = first;
 
 
 while (first % num != 0 || second % num != 0)
 	{
 	 num = num - 1;	
 	}
 printf ("\nThe GCF of %i and %i is: %i\n", first, second, num);
}



void main (void)
{
 int first, second;   /* the values returned from get_value */
 
 
 printf ("This program asks the user for two positive integers and outputs:"
 		 " the factors of each, the prime factorization of each, the least"
		 " common multiple of the two integers, and the greatest common"
		 " factor of the two integers.\n\n");
  
  first = get_value();
  second = get_value();
  
  printf ("The two values you entered are: %i and %i.\n\n\n", first, second);
  
  print_factors (first, second);
  print_primeFactorization (first, second);
  print_LCM (first, second);
  print_GCF (first, second);

}
